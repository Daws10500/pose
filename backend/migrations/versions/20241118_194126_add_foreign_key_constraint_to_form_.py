"""Add foreign key constraint to form_analyses.performance_log_id

Revision ID: bf9b9962e431
Revises: 
Create Date: 2024-11-18 19:41:26.919129+00:00

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'bf9b9962e431'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('athlete_programs', 'athlete_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('athlete_programs', 'program_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('athlete_programs', 'status',
               existing_type=sa.VARCHAR(length=50),
               server_default=None,
               existing_nullable=True)
    op.alter_column('athlete_programs', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               type_=sa.DateTime(),
               existing_nullable=True)
    op.alter_column('athlete_programs', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               type_=sa.DateTime(),
               existing_nullable=True)
    op.drop_index('idx_athlete_programs_athlete', table_name='athlete_programs')
    op.drop_index('idx_athlete_programs_program', table_name='athlete_programs')
    op.add_column('exercises', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.alter_column('exercises', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               type_=sa.DateTime(),
               existing_nullable=True)
    op.create_foreign_key(None, 'form_analyses', 'performance_logs', ['performance_log_id'], ['id'])
    op.add_column('performance_logs', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('performance_logs', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.alter_column('performance_logs', 'athlete_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('performance_logs', 'workout_exercise_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('performance_logs', 'logged_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               type_=sa.DateTime(),
               existing_nullable=False)
    op.drop_index('idx_performance_logs_athlete', table_name='performance_logs')
    op.drop_index('idx_performance_logs_exercise', table_name='performance_logs')
    op.drop_index('performance_logs_logged_at_idx', table_name='performance_logs')
    op.alter_column('programs', 'coach_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('programs', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               type_=sa.DateTime(),
               existing_nullable=True)
    op.alter_column('programs', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               type_=sa.DateTime(),
               existing_nullable=True)
    op.drop_index('idx_programs_coach', table_name='programs')
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               type_=sa.DateTime(),
               existing_nullable=True)
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               type_=sa.DateTime(),
               existing_nullable=True)
    op.drop_index('idx_users_email', table_name='users')
    op.add_column('workout_exercises', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.alter_column('workout_exercises', 'workout_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('workout_exercises', 'exercise_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('workout_exercises', 'set_type',
               existing_type=postgresql.ENUM('warmup', 'working', 'dropset', 'failure', name='set_type'),
               server_default=None,
               existing_nullable=True)
    op.alter_column('workout_exercises', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               type_=sa.DateTime(),
               existing_nullable=True)
    op.drop_index('idx_workout_exercises_workout', table_name='workout_exercises')
    op.alter_column('workouts', 'program_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('workouts', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               type_=sa.DateTime(),
               existing_nullable=True)
    op.alter_column('workouts', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               type_=sa.DateTime(),
               existing_nullable=True)
    op.drop_index('idx_workouts_program', table_name='workouts')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index('idx_workouts_program', 'workouts', ['program_id'], unique=False)
    op.alter_column('workouts', 'updated_at',
               existing_type=sa.DateTime(),
               server_default=sa.text('CURRENT_TIMESTAMP'),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('workouts', 'created_at',
               existing_type=sa.DateTime(),
               server_default=sa.text('CURRENT_TIMESTAMP'),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('workouts', 'program_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_index('idx_workout_exercises_workout', 'workout_exercises', ['workout_id'], unique=False)
    op.alter_column('workout_exercises', 'created_at',
               existing_type=sa.DateTime(),
               server_default=sa.text('CURRENT_TIMESTAMP'),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('workout_exercises', 'set_type',
               existing_type=postgresql.ENUM('warmup', 'working', 'dropset', 'failure', name='set_type'),
               server_default=sa.text("'working'::set_type"),
               existing_nullable=True)
    op.alter_column('workout_exercises', 'exercise_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('workout_exercises', 'workout_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('workout_exercises', 'updated_at')
    op.create_index('idx_users_email', 'users', ['email'], unique=False)
    op.alter_column('users', 'updated_at',
               existing_type=sa.DateTime(),
               server_default=sa.text('CURRENT_TIMESTAMP'),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('users', 'created_at',
               existing_type=sa.DateTime(),
               server_default=sa.text('CURRENT_TIMESTAMP'),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.create_index('idx_programs_coach', 'programs', ['coach_id'], unique=False)
    op.alter_column('programs', 'updated_at',
               existing_type=sa.DateTime(),
               server_default=sa.text('CURRENT_TIMESTAMP'),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('programs', 'created_at',
               existing_type=sa.DateTime(),
               server_default=sa.text('CURRENT_TIMESTAMP'),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('programs', 'coach_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_index('performance_logs_logged_at_idx', 'performance_logs', [sa.text('logged_at DESC')], unique=False)
    op.create_index('idx_performance_logs_exercise', 'performance_logs', ['workout_exercise_id'], unique=False)
    op.create_index('idx_performance_logs_athlete', 'performance_logs', ['athlete_id'], unique=False)
    op.alter_column('performance_logs', 'logged_at',
               existing_type=sa.DateTime(),
               server_default=sa.text('CURRENT_TIMESTAMP'),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=False)
    op.alter_column('performance_logs', 'workout_exercise_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('performance_logs', 'athlete_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('performance_logs', 'updated_at')
    op.drop_column('performance_logs', 'created_at')
    op.drop_constraint(None, 'form_analyses', type_='foreignkey')
    op.alter_column('exercises', 'created_at',
               existing_type=sa.DateTime(),
               server_default=sa.text('CURRENT_TIMESTAMP'),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.drop_column('exercises', 'updated_at')
    op.create_index('idx_athlete_programs_program', 'athlete_programs', ['program_id'], unique=False)
    op.create_index('idx_athlete_programs_athlete', 'athlete_programs', ['athlete_id'], unique=False)
    op.alter_column('athlete_programs', 'updated_at',
               existing_type=sa.DateTime(),
               server_default=sa.text('CURRENT_TIMESTAMP'),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('athlete_programs', 'created_at',
               existing_type=sa.DateTime(),
               server_default=sa.text('CURRENT_TIMESTAMP'),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('athlete_programs', 'status',
               existing_type=sa.VARCHAR(length=50),
               server_default=sa.text("'active'::character varying"),
               existing_nullable=True)
    op.alter_column('athlete_programs', 'program_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('athlete_programs', 'athlete_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    # ### end Alembic commands ###
